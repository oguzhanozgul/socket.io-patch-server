name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
    - main
  pull_request:
    branches: 
    - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  # build the docker image and push it to github packages
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # deploy the images from github packages to VPS and start it
  deploy-to-vps:
    runs-on: ubuntu-latest   
    needs: [build-and-push-image]
    
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          # VPS IP
          host: ${{ secrets.VPS_SSH_HOST }}
          # VPS username
          username: ${{ secrets.VPS_SSH_USERNAME }}
          # SSH key
          key: ${{ secrets.VPS_SSH_SECRET }}
          # SSH port
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            echo "Logging in to ghrc.io"
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u oguzhanozgul --password-stdin
            echo "Pulling new image"
            docker pull ghcr.io/oguzhanozgul/socket.io-patch-server:main
            echo "Stopping container if already running"
            docker stop socket.io-patch-server
            echo "Starting container"
            docker run -d --restart unless-stopped --publish 9001:9001 --name socket.io-patch-server ghcr.io/oguzhanozgul/socket.io-patch-server:main
            echo "Deleting image"
            docker rmi ghcr.io/oguzhanozgul/socket.io-patch-server:main -f